"""
Django settings for idrisBackend project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOGS_DIR = os.path.join(BASE_DIR, 'sys/logs')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-xf7lfuz4bmcs!hviaa@!9-v14m@sf9$#7ss&+7&ikfe0#jsc%q'
SECRET_KEY = 'django-insecure-f$rybd7or=4vavz%ayb+q3s734&!sd2gy-+ogo&)=ush6_uzj+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['100.64.6.105','localhost:3001','chitralhive.com','localhost','127.0.0.1','idrisbookbank-dev.inara.tech','idrisbookbank-dev-server.inara.tech']


# Application definition

INSTALLED_APPS = [
    # 'jet.dashboard',
    # 'jet',
    'inara',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    "rest_framework",
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'django.contrib.sites',
    

    # authentication
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'rest_framework_simplejwt.token_blacklist',
    'simple_history',
    'django_cleanup.apps.CleanupConfig',
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}
DEFAULT_FROM_EMAIL = 'idrisbookbank@gmail.com'
EMAIL_REQUIRED=True
EMAIL_VERIFICATION = 'mandatory'
SOCIALACCOUNT_EMAIL_VERIFICATION="mandatory"
SOCIALACCOUNT_EMAIL_REQUIRED=True
DEFAULT_IMAGE_STRING = 'idris/asset/default-item.image.jpg'
IMAGE_PROCESSING_RECIPIENTS=['areebah.mushtaq@inara.pk','zubair.shahid@inara.pk','danish.idris@gmail.com','hilal.afridi@inara.pk','maryam.tauheed@inara.pk','idrisbookbank@gmail.com']
DEFAULT_SITEMAP_S3 = 'idris/static/sitemap_dev.xml'
DEFAULT_SITEMAP_LOCAL = 'sitemap_dev.xml'

# EMAIL_USE_SSL = True
HostDomain='https://idrisbookbank-dev.inara.tech/'
IdrisEmail="idrisbookbank@gmail.com"
MAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'#'59.103.248.24'#'imap-pop.ptcl.net.pk'
EMAIL_HOST_USER = 'idrisbookbank@gmail.com'
EMAIL_HOST_PASSWORD = 'mfeuvmqdbmjaegwe'#'6YTb#nts00'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False



SITE_ID=1
REST_USE_JWT=True
# JWT_AUTH_COOKIE = 'access-token'
# JWT_AUTH_REFRESH_COOKIE = 'refresh-token'
JWT_AUTH_HTTPONLY = False
JWT_AUTH_RETURN_EXPIRATION = True

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=50),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
    'BLACKLISTED_TOKEN_MODEL': 'inara.models.TokenBlacklist',
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True, 
    'UPDATE_LAST_LOGIN': True,
    "USER_ID_FIELD": "id",  # for the custom user model
    "USER_ID_CLAIM": "id",
    "SIGNING_KEY": "U+aA/ZVl4G0X4ydfaI+wQu6s/94whBN4Chp1J6AfSQI="
    
}
REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'inara.serializers.UserModelSerializer',
    'LOGIN_SERIALIZER': 'inara.serializers.CustomLoginRoleSerializer',
    'PASSWORD_RESET_SERIALIZER':'inara.serializers.CustomPasswordResetSerializer',
}

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticated",
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "dj_rest_auth.jwt_auth.JWTCookieAuthentication",
    ),
    
}
AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# 2F Authentication Configure
# TOTP_APPNAME = 'idrisbookbank.inara.tech'


CORS_ALLOWED_ORIGINS = [
    "https://idrisbookbank-dev.inara.tech",
    "http://idrisbookbank-dev.inara.tech",
]
# CSRF_TRUSTED_ORIGINS = [ 'https://idrisbookbank-dev.inara.tech', 'http://idrisbookbank-dev.inara.tech']



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'inara.middleware.TokenBlacklistMiddleware',
]

ROOT_URLCONF = 'ecommerce_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'ecommerce_inara',
#         'USER': 'postgres',
#         'PASSWORD': 'inara123456INARA',
#         'HOST': '0.0.0.0',
#         'PORT': '5432',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'chitral_hive',
        'USER': 'chitral',
        'PASSWORD': 'chitral',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'idressbook',
#         'USER': 'idressbook',
#         'PASSWORD': 'idress@Inara@321',
#         'HOST': '10.254.153.144',
#         'PORT': '5432',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# STATIC_URL = 'static/'
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# # Media Files
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_URL = '/media/'


STATIC_URL = '/api/static/'
MEDIA_URL = 'api/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

OLD_PASSWORD_FIELD_ENABLED = True

# JET_DEFAULT_THEME = 'green'
# JET_SIDE_MENU_COMPACT = False

AUTH_USER_MODEL = 'inara.User'

HostDomain = 'https://idrisbookbank.inara.tech/'
ImageUrl='http://100.64.6.105:8091/media/'

CORS_ORIGIN_ALLOW_ALL = True


# CORS_ALLOW_METHODS = [
#     "DELETE",
#     "GET",
#     "OPTIONS",
#     "PATCH",
#     "POST",
#     "PUT",
# ]
# CORS_ALLOW_HEADERS = [
#     "accept",
#     "accept-encoding",
#     "authorization",
#     "content-type",
#     "dnt",
#     "origin",
#     "user-agent",
#     "x-csrftoken",
#     "x-requested-with",
#     "cache-control",
#     "pragma",
# ]

# CELERY
# 'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',
#         'USER': 'postgres',
#         'PASSWORD': 'p@55word',
#         'HOST': '0.0.0.0',
#         'PORT': '5432',
broker_url = 'amqp://'
result_backend = 'db+postgresql://postgres:inara123456INARA@0.0.0.0:5432/postgres'
POSTGRES_USER1 = 'postgres'
POSTGRES_PASSWORD1 = 'inara123456INARA'
POSTGRES_HOST1 = '0.0.0.0'
POSTGRES_PORT1 = '5432'
POSTGRES_DB1 = 'postgres'
# RESULT_BACKEND = "db+postgresql://"+POSTGRES_USER1+":"+POSTGRES_PASSWORD1+"@"+POSTGRES_HOST1+":"+POSTGRES_PORT1+"/"+POSTGRES_DB1
accept_content = ['json']
task_serializer = 'json'
result_serializer = 'json'
timezone = 'Asia/Karachi'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format':'[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
            # 'datefmt': '%Y-%m-%d %H:%M:%S',
            # 'style': '{',
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOGS_DIR, 'idris.log'),
            'backupCount': 90,
            'when':'midnight',
            'formatter': 'simple'
        },
        'celeryFile': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOGS_DIR, 'celery.log'),
            'backupCount': 90,
            'when':'midnight',
            'formatter': 'simple'
        },
        'categorySync': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOGS_DIR, 'categorySync.log'),
            'backupCount': 90,
            'when':'midnight',
            'formatter': 'simple'
        },
        'itemSync': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(LOGS_DIR, 'itemSync.log'),
            'backupCount': 90,
            'when':'midnight',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'inara': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'ecommerce_backend': {
            'handlers': ['celeryFile'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'inara.core.middlewares.externalPOS.Gofrugal_RPOS7.item': {
            'handlers': ['itemSync'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}